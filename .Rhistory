resultats_B <- tidy(modele_B)
tableau_B <- tbl_regression(modele_B, exponentiate = FALSE, add_glance = FALSE)
# Model C: Same as model B but controlling for district
modele_C <- lm(endline_intention ~ endline_groupe_traitement + endline_age + endline_sex + endline_district, data = donnees_fusionnees)
resultats_C <- tidy(modele_C)
tableau_C <- tbl_regression(modele_C, exponentiate = FALSE, add_glance = FALSE)
# Merge summary tables
tableau_final <- tbl_merge(list(tableau_A, tableau_B, tableau_C)) %>%
tab_spanner(label = "Model A", columns = starts_with("model1")) %>%
tab_spanner(label = "Model B", columns = starts_with("model2")) %>%
tab_spanner(label = "Model C", columns = starts_with("model3")) %>%
bold_labels()
library(gtsummary)
library(broom)
# Modèle A : Modèle vide - Effet du traitement sur les intentions
modele_A <- lm(endline_intention ~ endline_groupe_traitement, data = donnees_fusionnees)
resultats_A <- tidy(modele_A)
tableau_A <- tbl_regression(modele_A, exponentiate = FALSE, add_glance = FALSE)
# Modèle B : Effet du traitement sur les intentions en tenant compte de l’âge et du sexe
modele_B <- lm(endline_intention ~ endline_groupe_traitement + endline_age + endline_sex, data = donnees_fusionnees)
resultats_B <- tidy(modele_B)
tableau_B <- tbl_regression(modele_B, exponentiate = FALSE, add_glance = FALSE)
# Modèle C : Identique au modèle B mais en contrôlant le district
modele_C <- lm(endline_intention ~ endline_groupe_traitement + endline_age + endline_sex + endline_district, data = donnees_fusionnees)
resultats_C <- tidy(modele_C)
tableau_C <- tbl_regression(modele_C, exponentiate = FALSE, add_glance = FALSE)
# Fusion des tableaux récapitulatifs
tableau_final <- tbl_merge(list(tableau_A, tableau_B, tableau_C)) %>%
bold_labels()
# Affichage du tableau récapitulatif
tableau_final
# Affichage du tableau récapitulatif
tableau_final
####Dans cette analyse de régression linéaire, nous avons examiné l'effet de l'appartenance au groupe de traitement sur l'intention de migrer. Les résultats indiquent que le coefficient de la variable "endline_groupe_traitement" est de -0.563, mais il n'est pas statistiquement significatif avec une p-value de 0.108. Par conséquent, nous n'avons pas trouvé de preuves solides d'une différence significative dans l'intention de migrer entre le groupe de traitement et le groupe de contrôle
library(gtsummary)
library(broom)
# Model A: Empty model - Effect of treatment on intentions
modele_A <- lm(endline_intention ~ endline_groupe_traitement, data = donnees_fusionnees)
resultats_A <- tidy(modele_A)
tableau_A <- tbl_regression(modele_A, exponentiate = FALSE, add_glance = FALSE)
# Model B: Effect of treatment on intentions taking into account age and gender
modele_B <- lm(endline_intention ~ endline_groupe_traitement + endline_age + endline_sex, data = donnees_fusionnees)
resultats_B <- tidy(modele_B)
tableau_B <- tbl_regression(modele_B, exponentiate = FALSE, add_glance = FALSE)
# Model C: Same as model B but controlling for district
modele_C <- lm(endline_intention ~ endline_groupe_traitement + endline_age + endline_sex + endline_district, data = donnees_fusionnees)
resultats_C <- tidy(modele_C)
tableau_C <- tbl_regression(modele_C, exponentiate = FALSE, add_glance = FALSE)
# Merge summary tables
tableau_final <- tbl_merge(list(tableau_A, tableau_B, tableau_C)) %>%
tab_spanner(label = "Model A", columns = starts_with("model1")) %>%
tab_spanner(label = "Model B", columns = starts_with("model2")) %>%
tab_spanner(label = "Model C", columns = starts_with("model3")) %>%
bold_labels()
library(gt)
# Model A: Empty model - Effect of treatment on intentions
modele_A <- lm(endline_intention ~ endline_groupe_traitement, data = donnees_fusionnees)
resultats_A <- tidy(modele_A)
tableau_A <- tbl_regression(modele_A, exponentiate = FALSE, add_glance = FALSE)
# Model B: Effect of treatment on intentions taking into account age and gender
modele_B <- lm(endline_intention ~ endline_groupe_traitement + endline_age + endline_sex, data = donnees_fusionnees)
resultats_B <- tidy(modele_B)
tableau_B <- tbl_regression(modele_B, exponentiate = FALSE, add_glance = FALSE)
# Model C: Same as model B but controlling for district
modele_C <- lm(endline_intention ~ endline_groupe_traitement + endline_age + endline_sex + endline_district, data = donnees_fusionnees)
resultats_C <- tidy(modele_C)
tableau_C <- tbl_regression(modele_C, exponentiate = FALSE, add_glance = FALSE)
# Merge summary tables
tableau_final <- tbl_merge(list(tableau_A, tableau_B, tableau_C)) %>%
tab_spanner(label = "Model A", columns = starts_with("model1")) %>%
tab_spanner(label = "Model B", columns = starts_with("model2")) %>%
tab_spanner(label = "Model C", columns = starts_with("model3")) %>%
bold_labels()
# Display summary table
tableau_final
library(gtsummary)
library(broom)
# Modèle A : Modèle vide - Effet du traitement sur les intentions
modele_A <- lm(endline_intention ~ endline_groupe_traitement, data = donnees_fusionnees)
resultats_A <- tidy(modele_A)
tableau_A <- tbl_regression(modele_A, exponentiate = FALSE, add_glance = FALSE)
# Modèle B : Effet du traitement sur les intentions en tenant compte de l’âge et du sexe
modele_B <- lm(endline_intention ~ endline_groupe_traitement + endline_age + endline_sex, data = donnees_fusionnees)
resultats_B <- tidy(modele_B)
tableau_B <- tbl_regression(modele_B, exponentiate = FALSE, add_glance = FALSE)
# Modèle C : Identique au modèle B mais en contrôlant le district
modele_C <- lm(endline_intention ~ endline_groupe_traitement + endline_age + endline_sex + endline_district, data = donnees_fusionnees)
resultats_C <- tidy(modele_C)
tableau_C <- tbl_regression(modele_C, exponentiate = FALSE, add_glance = FALSE)
# Fusion des tableaux récapitulatifs
tableau_final <- tbl_merge(list(tableau_A, tableau_B, tableau_C)) %>%
bold_labels()
# Affichage du tableau récapitulatif
tableau_final
tableau_final <- tbl_merge(list(tableau_A, tableau_B, tableau_C)) %>%
bold_labels() %>%
modify_table_header(Model = c("Model A", "Model B", "Model C"))
library(gtsummary)
library(broom)
# Modèle A : Modèle vide - Effet du traitement sur les intentions
modele_A <- lm(endline_intention ~ endline_groupe_traitement, data = donnees_fusionnees)
resultats_A <- tidy(modele_A)
tableau_A <- tbl_regression(modele_A, exponentiate = FALSE, add_glance = FALSE)
# Modèle B : Effet du traitement sur les intentions en tenant compte de l’âge et du sexe
modele_B <- lm(endline_intention ~ endline_groupe_traitement + endline_age + endline_sex, data = donnees_fusionnees)
resultats_B <- tidy(modele_B)
tableau_B <- tbl_regression(modele_B, exponentiate = FALSE, add_glance = FALSE)
# Modèle C : Identique au modèle B mais en contrôlant le district
modele_C <- lm(endline_intention ~ endline_groupe_traitement + endline_age + endline_sex + endline_district, data = donnees_fusionnees)
resultats_C <- tidy(modele_C)
tableau_C <- tbl_regression(modele_C, exponentiate = FALSE, add_glance = FALSE)
tableau_final <- tbl_merge(list(tableau_A, tableau_B, tableau_C)) %>%
bold_labels() %>%
modify_table_header(Model = c("Model A", "Model B", "Model C"))
tableau_final <- tbl_merge(list(tableau_A, tableau_B, tableau_C)) %>%
bold_labels() %>%
modify_header(label = "**Model A**", test = NA, estimate = NA,
label = "**Model B**", test = NA, estimate = NA,
label = "**Model C**", test = NA, estimate = NA,
modify_spanning_header = TRUE)
# Affichage du tableau récapitulatif
tableau_final
tableau_final <- tbl_merge(list(tableau_A, tableau_B, tableau_C)) %>%
bold_labels() %>%
modify_header(stat_0 ~ "**Model A**",
stat_1 ~ "**Model B**",
stat_2 ~ "**Model C**") %>%
modify_spanning_header(c("**Modèles**" = everything()))
tableau_final <- tbl_merge(list(tableau_A, tableau_B, tableau_C)) %>%
bold_labels() %>%
modify_header(estimate = "**Estimate**",
term = "**Term**",
label = "**Label**",
test = "**p-value**") %>%
add_overall() %>%
add_p() %>%
modify_spanning_header(estimate ~ "**Model A**",
overall ~ "**Model B**",
p ~ "**Model C**")
tableau_final <- tbl_merge(list(tableau_A, tableau_B, tableau_C)) %>%
bold_labels() %>%
modify_header(stat_0 = "**Model A**",
stat_1 = "**Model B**",
stat_2 = "**Model C**") %>%
modify_spanning_header(c("stat_0", "stat_1", "stat_2") ~ "**Modèles**")
# Affichage du tableau récapitulatif
tableau_final
####Dans cette analyse de régression linéaire, nous avons examiné l'effet de l'appartenance au groupe de traitement sur l'intention de migrer. Les résultats indiquent que le coefficient de la variable "endline_groupe_traitement" est de -0.563, mais il n'est pas statistiquement significatif avec une p-value de 0.108. Par conséquent, nous n'avons pas trouvé de preuves solides d'une différence significative dans l'intention de migrer entre le groupe de traitement et le groupe de contrôle
library(gtsummary)
library(broom)
# Model A: Empty model - Effect of treatment on intentions
modele_A <- lm(endline_intention ~ endline_groupe_traitement, data = donnees_fusionnees)
resultats_A <- tidy(modele_A)
tableau_A <- tbl_regression(modele_A, exponentiate = FALSE, add_glance = FALSE)
# Model B: Effect of treatment on intentions taking into account age and gender
modele_B <- lm(endline_intention ~ endline_groupe_traitement + endline_age + endline_sex, data = donnees_fusionnees)
resultats_B <- tidy(modele_B)
tableau_B <- tbl_regression(modele_B, exponentiate = FALSE, add_glance = FALSE)
# Model C: Same as model B but controlling for district
modele_C <- lm(endline_intention ~ endline_groupe_traitement + endline_age + endline_sex + endline_district, data = donnees_fusionnees)
resultats_C <- tidy(modele_C)
tableau_C <- tbl_regression(modele_C, exponentiate = FALSE, add_glance = FALSE)
# Merge summary tables
tableau_final <- tbl_merge(list(tableau_A, tableau_B, tableau_C)) %>%
bold_labels() %>%
modify_table_header(
starts_with("model1") ~ "Model A",
starts_with("model2") ~ "Model B",
starts_with("model3") ~ "Model C"
)
# Display summary table
tableau_final
####Dans cette analyse de régression linéaire, nous avons examiné l'effet de l'appartenance au groupe de traitement sur l'intention de migrer. Les résultats indiquent que le coefficient de la variable "endline_groupe_traitement" est de -0.563, mais il n'est pas statistiquement significatif avec une p-value de 0.108. Par conséquent, nous n'avons pas trouvé de preuves solides d'une différence significative dans l'intention de migrer entre le groupe de traitement et le groupe de contrôle
library(gtsummary)
library(broom)
# Model A: Empty model - Effect of treatment on intentions
modele_A <- lm(endline_intention ~ endline_groupe_traitement, data = donnees_fusionnees)
resultats_A <- tidy(modele_A)
tableau_A <- tbl_regression(modele_A, exponentiate = FALSE, add_glance = FALSE)
# Model B: Effect of treatment on intentions taking into account age and gender
modele_B <- lm(endline_intention ~ endline_groupe_traitement + endline_age + endline_sex, data = donnees_fusionnees)
resultats_B <- tidy(modele_B)
tableau_B <- tbl_regression(modele_B, exponentiate = FALSE, add_glance = FALSE)
# Model C: Same as model B but controlling for district
modele_C <- lm(endline_intention ~ endline_groupe_traitement + endline_age + endline_sex + endline_district, data = donnees_fusionnees)
resultats_C <- tidy(modele_C)
tableau_C <- tbl_regression(modele_C, exponentiate = FALSE, add_glance = FALSE)
# Merge summary tables
tableau_final <- tbl_merge(list(tableau_A, tableau_B, tableau_C)) %>%
bold_labels() %>%
modify_header(
update = starts_with("model1"),
label = "Model A"
) %>%
modify_header(
update = starts_with("model2"),
label = "Model B"
) %>%
modify_header(
update = starts_with("model3"),
label = "Model C"
)
# Display summary table
tableau_final
####Dans cette analyse de régression linéaire, nous avons examiné l'effet de l'appartenance au groupe de traitement sur l'intention de migrer. Les résultats indiquent que le coefficient de la variable "endline_groupe_traitement" est de -0.563, mais il n'est pas statistiquement significatif avec une p-value de 0.108. Par conséquent, nous n'avons pas trouvé de preuves solides d'une différence significative dans l'intention de migrer entre le groupe de traitement et le groupe de contrôle
library(gtsummary)
library(broom)
# Model A: Empty model - Effect of treatment on intentions
modele_A <- lm(endline_intention ~ endline_groupe_traitement, data = donnees_fusionnees)
resultats_A <- tidy(modele_A)
tableau_A <- tbl_regression(modele_A, exponentiate = FALSE, add_glance = FALSE)
# Model B: Effect of treatment on intentions taking into account age and gender
modele_B <- lm(endline_intention ~ endline_groupe_traitement + endline_age + endline_sex, data = donnees_fusionnees)
resultats_B <- tidy(modele_B)
tableau_B <- tbl_regression(modele_B, exponentiate = FALSE, add_glance = FALSE)
# Model C: Same as model B but controlling for district
modele_C <- lm(endline_intention ~ endline_groupe_traitement + endline_age + endline_sex + endline_district, data = donnees_fusionnees)
resultats_C <- tidy(modele_C)
tableau_C <- tbl_regression(modele_C, exponentiate = FALSE, add_glance = FALSE)
# Merge summary tables
tableau_final <- tbl_merge(list(tableau_A, tableau_B, tableau_C)) %>%
bold_labels() %>%
modify_header(
update = all_of(grep("^model1", colnames(tableau_final), value = TRUE)),
label = "Model A"
) %>%
modify_header(
update = all_of(grep("^model2", colnames(tableau_final), value = TRUE)),
label = "Model B"
) %>%
modify_header(
update = all_of(grep("^model3", colnames(tableau_final), value = TRUE)),
label = "Model C"
)
# Display summary table
tableau_final
####Dans cette analyse de régression linéaire, nous avons examiné l'effet de l'appartenance au groupe de traitement sur l'intention de migrer. Les résultats indiquent que le coefficient de la variable "endline_groupe_traitement" est de -0.563, mais il n'est pas statistiquement significatif avec une p-value de 0.108. Par conséquent, nous n'avons pas trouvé de preuves solides d'une différence significative dans l'intention de migrer entre le groupe de traitement et le groupe de contrôle
library(gtsummary)
library(broom)
# Model A: Empty model - Effect of treatment on intentions
modele_A <- lm(endline_intention ~ endline_groupe_traitement, data = donnees_fusionnees)
resultats_A <- tidy(modele_A)
tableau_A <- tbl_regression(modele_A, exponentiate = FALSE, add_glance = FALSE)
# Model B: Effect of treatment on intentions taking into account age and gender
modele_B <- lm(endline_intention ~ endline_groupe_traitement + endline_age + endline_sex, data = donnees_fusionnees)
resultats_B <- tidy(modele_B)
tableau_B <- tbl_regression(modele_B, exponentiate = FALSE, add_glance = FALSE)
# Model C: Same as model B but controlling for district
modele_C <- lm(endline_intention ~ endline_groupe_traitement + endline_age + endline_sex + endline_district, data = donnees_fusionnees)
resultats_C <- tidy(modele_C)
tableau_C <- tbl_regression(modele_C, exponentiate = FALSE, add_glance = FALSE)
# Merge summary tables
tableau_final <- tbl_merge(list(tableau_A, tableau_B, tableau_C)) %>%
bold_labels() %>%
modify_header(
update = all_of(grep("^model1", colnames(tableau_final), value = TRUE)),
label = "Model A"
) %>%
modify_header(
update = all_of(grep("^model2", colnames(tableau_final), value = TRUE)),
label = "Model B"
) %>%
modify_header(
update = all_of(grep("^model3", colnames(tableau_final), value = TRUE)),
label = "Model C"
)
# Display summary table
tableau_final
tableau_final <- tbl_merge(list(tableau_A, tableau_B, tableau_C)) %>%
bold_labels() %>%
modify_table_header(Model = c("Model A", "Model B", "Model C"))
# Affichage du tableau récapitulatif
tableau_final
####Dans cette analyse de régression linéaire, nous avons examiné l'effet de l'appartenance au groupe de traitement sur l'intention de migrer. Les résultats indiquent que le coefficient de la variable "endline_groupe_traitement" est de -0.563, mais il n'est pas statistiquement significatif avec une p-value de 0.108. Par conséquent, nous n'avons pas trouvé de preuves solides d'une différence significative dans l'intention de migrer entre le groupe de traitement et le groupe de contrôle
# Charger les packages nécessaires
library(dplyr)
library(broom)
# Modèle A : Modèle vide - Effet du traitement sur les intentions
modele_A <- lm(endline_intention ~ endline_traitement, data = donnees_individuelles)
library(dplyr)
library(broom)
# Modèle A : Modèle vide - Effet du traitement sur les intentions
modele_A <- lm(endline_intention ~ endline_groupe_traitement, data = donnees_individuelles)
tableau_final <- tbl_merge(list(tableau_A, tableau_B, tableau_C)) %>%
bold_labels() %>%
modify_table_header(Model = c("Model A", "Model B", "Model C"))
library(gtsummary)
library(broom)
# Model A: Empty model - Effect of treatment on intentions
modele_A <- lm(endline_intention ~ endline_groupe_traitement, data = donnees_fusionnees)
resultats_A <- tidy(modele_A)
tableau_A <- tbl_regression(modele_A, exponentiate = FALSE, add_glance = FALSE)
# Model B: Effect of treatment on intentions taking into account age and gender
modele_B <- lm(endline_intention ~ endline_groupe_traitement + endline_age + endline_sex, data = donnees_fusionnees)
resultats_B <- tidy(modele_B)
tableau_B <- tbl_regression(modele_B, exponentiate = FALSE, add_glance = FALSE)
# Model C: Same as model B but controlling for district
modele_C <- lm(endline_intention ~ endline_groupe_traitement + endline_age + endline_sex + endline_district, data = donnees_fusionnees)
resultats_C <- tidy(modele_C)
tableau_C <- tbl_regression(modele_C, exponentiate = FALSE, add_glance = FALSE)
# Merge summary tables
tableau_final <- tbl_merge(list(tableau_A, tableau_B, tableau_C)) %>%
bold_labels() %>%
modify_spanning_header(c("Model 1", "Model 2", "Model 3") ~ c("Model A", "Model B", "Model C"))
# Display summary table
tableau_final
# Display summary table
tableau_final
modify_spanning_header(c("Model 1", "Model 2", "Model 3") ~ c("Model A", "Model B", "Model C"))
# Merge summary tables
tableau_final <- tbl_merge(list(tableau_A, tableau_B, tableau_C)) %>%
bold_labels() %>%
modify_spanning_header(c("Model 1", "Model 2", "Model 3") ~ c("Model A", "Model B", "Model C"))
# Display summary table
tableau_final
library(broom)
library(flextable)
modele_regression <- lm(endline_intention ~ endline_groupe_traitement, data = donnees_fusionnees)
tableau_regression <- tidy(modele_regression)
tableau_final <- flextable(tableau_regression) %>%
set_caption("Tableau récapitulatif des résultats de régression linéaire")
tableau_final
library(gtsummary)
library(broom)
# Model A: Empty model - Effect of treatment on intentions
modele_A <- lm(endline_intention ~ endline_groupe_traitement, data = donnees_fusionnees)
resultats_A <- tidy(modele_A)
tableau_A <- tbl_regression(modele_A, exponentiate = FALSE, add_glance = FALSE)
# Model B: Effect of treatment on intentions taking into account age and gender
modele_B <- lm(endline_intention ~ endline_groupe_traitement + endline_age + endline_sex, data = donnees_fusionnees)
resultats_B <- tidy(modele_B)
tableau_B <- tbl_regression(modele_B, exponentiate = FALSE, add_glance = FALSE)
# Model C: Same as model B but controlling for district
modele_C <- lm(endline_intention ~ endline_groupe_traitement + endline_age + endline_sex + endline_district, data = donnees_fusionnees)
resultats_C <- tidy(modele_C)
tableau_C <- tbl_regression(modele_C, exponentiate = FALSE, add_glance = FALSE)
# Merge summary tables
tableau_final <- tbl_merge(list(tableau_A, tableau_B, tableau_C)) %>%
bold_labels() %>%
modify_spanning_header(c("Model 1", "Model 2", "Model 3") ~ c("Model A", "Model B", "Model C"))
library(gtsummary)
library(broom)
# Modèle A : Modèle vide - Effet du traitement sur les intentions
modele_A <- lm(endline_intention ~ endline_groupe_traitement, data = donnees_fusionnees)
resultats_A <- tidy(modele_A)
tableau_A <- tbl_regression(modele_A, exponentiate = FALSE, add_glance = FALSE)
# Modèle B : Effet du traitement sur les intentions en tenant compte de l’âge et du sexe
modele_B <- lm(endline_intention ~ endline_groupe_traitement + endline_age + endline_sex, data = donnees_fusionnees)
resultats_B <- tidy(modele_B)
tableau_B <- tbl_regression(modele_B, exponentiate = FALSE, add_glance = FALSE)
# Modèle C : Identique au modèle B mais en contrôlant le district
modele_C <- lm(endline_intention ~ endline_groupe_traitement + endline_age + endline_sex + endline_district, data = donnees_fusionnees)
resultats_C <- tidy(modele_C)
tableau_C <- tbl_regression(modele_C, exponentiate = FALSE, add_glance = FALSE)
# Fusion des tableaux récapitulatifs
tableau_final <- tbl_merge(list(tableau_A, tableau_B, tableau_C)) %>%
bold_labels()
# Affichage du tableau récapitulatif
tableau_final
library(broom)
library(knitr)
# Model A: Empty model - Effect of treatment on intentions
modele_A <- lm(endline_intention ~ endline_groupe_traitement, data = donnees_fusionnees)
resultats_A <- tidy(modele_A)
# Model B: Effect of treatment on intentions taking into account age and gender
modele_B <- lm(endline_intention ~ endline_groupe_traitement + endline_age + endline_sex, data = donnees_fusionnees)
resultats_B <- tidy(modele_B)
# Model C: Same as model B but controlling for district
modele_C <- lm(endline_intention ~ endline_groupe_traitement + endline_age + endline_sex + endline_district, data = donnees_fusionnees)
resultats_C <- tidy(modele_C)
# Merge summary tables
tableau_final <- cbind(resultats_A[, c("term", "estimate", "conf.low", "conf.high", "p.value")],
resultats_B[, c("estimate", "conf.low", "conf.high", "p.value")],
resultats_C[, c("estimate", "conf.low", "conf.high", "p.value")])
colnames(tableau_final) <- c("Variable",
"Model A Estimate", "Model A CI Low", "Model A CI High", "Model A p-value",
"Model B Estimate", "Model B CI Low", "Model B CI High", "Model B p-value",
"Model C Estimate", "Model C CI Low", "Model C CI High", "Model C p-value")
# Display summary table
kable(tableau_final, digits = 2)
# Chunk global pour définir les options par défaut
knitr::opts_chunk$set(
echo = FALSE,
warning = FALSE,
message = FALSE,
results = 'asis'
)
# Les packages necessaires
library(dplyr)
library(lubridate)
library(gtsummary)
library(janitor)
library(readxl)
# Lire la feuille des micro-données individuelles
donnees_individuelles <- read_excel("Base_Partie 2.xlsx", sheet = "data")
# Lire la feuille des données des districts
donnees_districts <- read_excel("Base_Partie 2.xlsx", sheet = "district")
# Lire la feuille des explications des variables
explications_variables <- read_excel("Base_Partie 2.xlsx", sheet = "codebook")
# Définir les valeurs négatives comme manquantes
donnees_individuelles$destination[donnees_individuelles$destination < 0] <- NA
# Renommer la variable "country_destination" en "destination"
donnees_individuelles <- donnees_individuelles %>%
rename(destination = country_destination)
# Définir les valeurs négatives comme manquantes
donnees_individuelles$destination[donnees_individuelles$destination < 0] <- NA
# Créer une nouvelle variable contenant des tranches d'âge de 5 ans
donnees_individuelles <- donnees_individuelles %>%
mutate(age_group = cut(age, breaks = seq(0, max(age, na.rm = TRUE), by = 5)))
# Définir les valeurs négatives comme manquantes
donnees_individuelles$destination[donnees_individuelles$destination < 0] <- NA
# Créer une nouvelle variable contenant des tranches d'âge de 5 ans
donnees_individuelles <- donnees_individuelles %>%
mutate(age_group = cut(age, breaks = seq(0, max(age, na.rm = TRUE), by = 5)))
# Créeons une nouvelle variable contenant le nombre d'entretiens réalisés par chaque agent recenseur
donnees_individuelles <- donnees_individuelles %>%
group_by(enumerator) %>%
mutate(n_entretiens = n()) %>%
ungroup()
# Fixons l'aléa pour obtenir des résultats reproductibles
set.seed(123)
# Créer une nouvelle variable qui affecte aléatoirement chaque répondant à un groupe de traitement (1) ou de contrôle (0)
donnees_individuelles <- donnees_individuelles %>%
mutate(groupe = sample(c(0, 1), size = nrow(donnees_individuelles), replace = TRUE))
View(donnees_individuelles)
# Fusionner la taille de la population de chaque district avec l'ensemble de données
donnees_individuelles <- donnees_individuelles %>%
left_join(donnees_districts, by = "district")
# Calculer la durée de l'entretien et la durée moyenne par enquêteur
donnees_individuelles <- donnees_individuelles %>%
mutate(duree_entretien = as.numeric(difftime(ymd_hms(endtime), ymd_hms(starttime), units = "mins"))) %>%
group_by(enumerator) %>%
mutate(duree_moyenne = mean(duree_entretien, na.rm = TRUE)) %>%
ungroup()
# Renommer toutes les variables en ajoutant le préfixe "endline_"
for (col in colnames(donnees_individuelles)) {
colnames(donnees_individuelles)[colnames(donnees_individuelles) == col] <- paste0("endline_", col)
}
# Installer et charger les packages dplyr et janitor
# Calculons l'âge moyen et le nombre moyen d'enfants par district
donnees_recap <- donnees_individuelles %>%
group_by(endline_district) %>%
summarize(endline_age_moyen = round(mean(endline_age, na.rm = TRUE), 2),
n_enfants_moyen = round(mean(endline_children_num, na.rm = TRUE), 2)) %>%
ungroup()
# Créer un tableau récapitulatif avec janitor
cat("<div style='width:100%;text-align:center;'>")
donnees_recap %>%
adorn_totals("row") %>%
as.data.frame() %>%
setNames(c("District", "Âge moyen", "Nombre d'enfants moyen")) %>%
knitr::kable(caption = "Récapitulatif des données par district", align = "c")
cat("</div>")
# Afficher la source en bas du tableau
cat("\n<div style='text-align:center;'>Source: Enquête sur les ménages</div>")
# charger les packages dplyr et gtsummary
library(dplyr)
library(gtsummary)
# Créer une nouvelle variable contenant les étiquettes "homme" et "femme"
donnees_individuelles$sexe <- ifelse(donnees_individuelles$endline_sex == 0, "Femme", "Homme")
# Créer un tableau récapitulatif des données par sexe
tableau_recap <- donnees_individuelles %>%
select(sexe, endline_age) %>%
tbl_summary(by = sexe) %>%
add_p() %>%
modify_header(update = all_stat_cols() ~ "**{level}**") %>%
modify_footnote(
all_stat_cols() ~ "Source: Enquête sur les ménages",
footnote = "Source: Enquête sur les ménages"
)
# Afficher le tableau récapitulatif
tableau_recap
library(ggplot2)
# Création d'un nuage de points de l’âge par rapport au nombre d’enfants.
ggplot(donnees_individuelles, aes(x = endline_age, y = endline_children_num)) +
geom_point()
library(broom)
library(flextable)
modele_regression <- lm(endline_intention ~ endline_groupe_traitement, data = donnees_fusionnees)
tableau_regression <- tidy(modele_regression)
tableau_final <- flextable(tableau_regression) %>%
set_caption("Tableau récapitulatif des résultats de régression linéaire")
tableau_final
library(gtsummary)
library(broom)
# Modèle A : Modèle vide - Effet du traitement sur les intentions
modele_A <- lm(endline_intention ~ endline_groupe_traitement, data = donnees_fusionnees)
resultats_A <- tidy(modele_A)
tableau_A <- tbl_regression(modele_A, exponentiate = FALSE, add_glance = FALSE)
# Modèle B : Effet du traitement sur les intentions en tenant compte de l’âge et du sexe
modele_B <- lm(endline_intention ~ endline_groupe_traitement + endline_age + endline_sex, data = donnees_fusionnees)
resultats_B <- tidy(modele_B)
tableau_B <- tbl_regression(modele_B, exponentiate = FALSE, add_glance = FALSE)
# Modèle C : Identique au modèle B mais en contrôlant le district
modele_C <- lm(endline_intention ~ endline_groupe_traitement + endline_age + endline_sex + endline_district, data = donnees_fusionnees)
resultats_C <- tidy(modele_C)
tableau_C <- tbl_regression(modele_C, exponentiate = FALSE, add_glance = FALSE)
# Fusion des tableaux récapitulatifs
tableau_final <- tbl_merge(list(tableau_A, tableau_B, tableau_C)) %>%
bold_labels()
# Affichage du tableau récapitulatif
tableau_final
library(broom)
library(flextable)
modele_regression <- lm(endline_intention ~ endline_groupe_traitement, data = donnees_fusionnees)
tableau_regression <- tidy(modele_regression)
tableau_final <- flextable(tableau_regression) %>%
set_caption("Tableau récapitulatif des résultats de régression linéaire")
tableau_final
getwd()
shiny::runApp('app')
runApp('Final/Partie_3/pathe')
